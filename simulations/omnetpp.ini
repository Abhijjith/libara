[General]
#network = PaperEvaluation
network = ManetTest
tkenv-image-path = ../images
simtime-scale = -6

# ARA parameters
**.deltaPhi = 2.0
**.initialPhi = 1.0
**.ackTimeout = 4000us

# set the evaporation policy (ARA)
**.evaporationModel = "OMNeTExponentialEvaporationPolicy"
# set the forwarding policy (ARA)
**.forwardingPolicyModel = "OMNeTStochasticFowardingPolicy"




*.playgroundSizeX = 800
*.playgroundSizeY = 800
**.coreDebug = false
**.channelNumber = 0
**.channelcontrol.numChannels = 1
**.mobility.x = -1
**.mobility.y = -1

# Application layer properties
**.node2.app.srcAddr = "192.168.0.2"
**.node2.app.destAddr = "192.168.0.3"
#**.packetLength = 256B
#**.app.destAddresses = "192.168.0.2 192.168.0.2 192.168.0.3"

# channel physical parameters
*.channelcontrol.carrierFrequency = 2.4GHz
*.channelcontrol.pMax = 20mW
*.channelcontrol.sat = -110dBm
*.channelcontrol.alpha = 2

# nic settings
**.mac.address = "auto"
**.mac.maxQueueSize = 14
**.mac.rtsThresholdBytes = 3000B
**.mac.bitrate = 2Mbps

**.radio.bitrate = 2Mbps
**.radio.transmitterPower = 2.0mW
**.radio.carrierFrequency = 2.4GHz
**.radio.transmitterPower = 20.0mW
**.radio.thermalNoise = -110dBm
**.radio.sensitivity = -85dBm
**.radio.pathLossAlpha = 2
**.radio.snirThreshold = 4dB

# battery settings
**.phy.usageCpuActive = 7.6
**.phy.usageCpuSleep = 0.237

**.radio.usage_radio_idle = 1.38mA
**.radio.usage_radio_recv = 9.6mA 
**.radio.usage_radio_sleep = 0.06mA 
**.radio.usage_radio_send = 0.450mA

**.battery.nominal = 1
**.battery.capacity = 1
**.battery.voltage = 1
#**.battery.nominal = 25
#**.battery.capacity = 25
#**.battery.voltage = 10
**.battery.resolution = 1s
**.battery.publishDelta = 0.5
**.battery.publishTime = 20s

[Config ARAPaperEvaluation]
network = ARAPaperEvaluation

# FIXME
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 600m
**.constraintAreaMaxY = 400m
**.constraintAreaMaxZ = 0m

# set the description field of the scenario
description = "Simulation settings are based on: ARA The Ant-Colony Based Routing Algorithm for MANETs" 
# set the simulation time to 900 seconds
sim-time-limit = 900s

# set the size of the area to 1500 m x 300 m
*.playgroundSizeX = 1500
*.playgroundSizeY = 300
*.playgroundSizeZ = 300

# set the number of hosts
*.numHosts = 50
# set the type of the mobility model
**.node*.mobilityType = "RandomWPMobility"
# denotes the speed of a node (mps = meter per second)
**.node*.mobility.speed = 10mps
# wait time between reaching a target and choosing a new one (means the pause time?)
**.node*.mobility.waitTime = uniform(3s,8s)
# default is 0.1s (100ms)
**.node*.mobility.updateInterval = 100ms

###################################################################
**.node[0].numUdpApps = 1
**.node[*].udpAppType = "UDPBasicBurst"


**.udpApp[0].destAddresses = "192.168.0.24"
**.udpApp[0].localPort = 1234
**.udpApp[0].destPort = 1234
**.udpApp[0].messageLength = 512B  # 
#**.udpApp[0].messageLength = 2000B  #
#**.udpApp[0].sendInterval = 0.2s + uniform(-0.001s,0.001s)
**.udpApp[0].sendInterval = 0.5s + uniform(-0.001s,0.001s)
**.udpApp[0].burstDuration = 0
**.udpApp[0].chooseDestAddrMode = "perBurst"
**.udpApp[0].sleepDuration = 1s
# **.udpApp[0].burstDuration = uniform(1s,4s,1)
# **.udpApp[0].stopTime = uniform(20s,40s,1)
**.udpApp[0].stopTime = 0s
##**.udpApp[0].startTime = uniform(0s,4s,1)
**.udpApp[0].startTime = 1s  #!
#**.udpApp[0].startTime = 10s
**.udpApp[0].delayLimit = 20s
**.udpApp[0].destAddrRNG = 0


**.node[23].udpAppType = "UDPSink"
**.node[23].numUdpApps = 1
**.node[23].udpApp.localPort = 1234

###################################################################

